# Number of Inngest application replicas
replicaCount: 1

# Container image
image:
  repository: inngest/inngest
  pullPolicy: IfNotPresent
  tag: "latest"  # ⚠️ Pin in production

# Kubernetes namespace
namespace:
  create: true
  name: "inngest"

# ServiceAccount
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod annotations
podAnnotations: {}

# Pod security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

# Container security context
securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  capabilities:
    drop:
      - ALL

# Kubernetes Service
service:
  type: ClusterIP
  port: 8288
  connPort: 8289

# ALB Ingress configuration
ingress:
  enabled: true
  className: alb
  annotations:
    "kubernetes.io/ingress.class": alb
    "alb.ingress.kubernetes.io/scheme": internet-facing
    "alb.ingress.kubernetes.io/target-type": ip
    "alb.ingress.kubernetes.io/listen-ports": '[{"HTTP":80},{"HTTPS":443}]'
    "alb.ingress.kubernetes.io/certificate-arn": arn:aws:acm:us-east-1:180294213274:certificate/80474a93-77c2-4f5b-be79-dd10961904f8
  hosts:
    - host: devopslogs.com
      paths:
        - path: "/inngest/*"
          pathType: ImplementationSpecific
  tls:
    - secretName: inngest-tls
      hosts:
        - devopslogs.com


# Resources
resources: {}

nodeSelector: {}
tolerations: []
affinity: {}

# Inngest configuration
inngest:
  eventKey: "0123456789abcdef0123456789abcdef"
  signingKey: "fedcba9876543210fedcba9876543210"
  config: ""
  host: ""
  port: "8288"
  sdkUrl: []
  connectGatewayPort: 8289
  noUI: false
  pollInterval: 60
  queueWorkers: 100
  retryInterval: 1
  tick: 150
  json: false
  logLevel: "info"
  verbose: false

  postgres:
    uri: "postgresql://inngest:secure_password@inngest-postgresql:5432/inngest"
  redis:
    uri: "redis://inngest-redis:6379"
  sqlite:
    dir: ""

postgresql:
  enabled: true
  image:
    repository: postgres
    tag: "17"
    pullPolicy: IfNotPresent
  auth:
    database: inngest
    username: inngest
    password: secure_password
  service:
    port: 5432
  persistence:
    enabled: true
    size: 8Gi
    storageClass: "gp2"
    accessModes: [ReadWriteOnce]

redis:
  enabled: true
  image:
    repository: redis
    tag: "7-alpine"
    pullPolicy: IfNotPresent
  service:
    port: 6379
  persistence:
    enabled: true
    size: 8Gi
    storageClass: "gp2"
    accessModes: [ReadWriteOnce]

keda:
  enabled: false

networkPolicy:
  enabled: false
  ingress: []
  egress: []

prometheus:
  image:
    repository: prom/prometheus
    tag: "v2.45.0"
    pullPolicy: IfNotPresent
  scrapeInterval: "15s"
  evaluationInterval: "15s"
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi
